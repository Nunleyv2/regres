{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMxWpebRNaNAtXEi2FRL9dR"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"DTcaSSCmxX5N","executionInfo":{"status":"ok","timestamp":1729324508562,"user_tz":-180,"elapsed":1544,"user":{"displayName":"Kursat Seçkin","userId":"06128694202626292872"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt"]},{"cell_type":"code","source":["data=pd.read_csv('/content/kanser.csv')"],"metadata":{"id":"ieoOzjN3xdTm","executionInfo":{"status":"ok","timestamp":1729324586526,"user_tz":-180,"elapsed":302,"user":{"displayName":"Kursat Seçkin","userId":"06128694202626292872"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":461},"id":"Yu3PAL5SxxNh","executionInfo":{"status":"ok","timestamp":1729324589165,"user_tz":-180,"elapsed":473,"user":{"displayName":"Kursat Seçkin","userId":"06128694202626292872"}},"outputId":"d5384c17-2b8d-4b4c-ae46-6ec3a384dd44"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           id diagnosis  radius_mean  texture_mean  perimeter_mean  area_mean  \\\n","0      842302         M        17.99         10.38          122.80     1001.0   \n","1      842517         M        20.57         17.77          132.90     1326.0   \n","2    84300903         M        19.69         21.25          130.00     1203.0   \n","3    84348301         M        11.42         20.38           77.58      386.1   \n","4    84358402         M        20.29         14.34          135.10     1297.0   \n","..        ...       ...          ...           ...             ...        ...   \n","564    926424         M        21.56         22.39          142.00     1479.0   \n","565    926682         M        20.13         28.25          131.20     1261.0   \n","566    926954         M        16.60         28.08          108.30      858.1   \n","567    927241         M        20.60         29.33          140.10     1265.0   \n","568     92751         B         7.76         24.54           47.92      181.0   \n","\n","     smoothness_mean  compactness_mean  concavity_mean  concave points_mean  \\\n","0            0.11840           0.27760         0.30010              0.14710   \n","1            0.08474           0.07864         0.08690              0.07017   \n","2            0.10960           0.15990         0.19740              0.12790   \n","3            0.14250           0.28390         0.24140              0.10520   \n","4            0.10030           0.13280         0.19800              0.10430   \n","..               ...               ...             ...                  ...   \n","564          0.11100           0.11590         0.24390              0.13890   \n","565          0.09780           0.10340         0.14400              0.09791   \n","566          0.08455           0.10230         0.09251              0.05302   \n","567          0.11780           0.27700         0.35140              0.15200   \n","568          0.05263           0.04362         0.00000              0.00000   \n","\n","     ...  texture_worst  perimeter_worst  area_worst  smoothness_worst  \\\n","0    ...          17.33           184.60      2019.0           0.16220   \n","1    ...          23.41           158.80      1956.0           0.12380   \n","2    ...          25.53           152.50      1709.0           0.14440   \n","3    ...          26.50            98.87       567.7           0.20980   \n","4    ...          16.67           152.20      1575.0           0.13740   \n","..   ...            ...              ...         ...               ...   \n","564  ...          26.40           166.10      2027.0           0.14100   \n","565  ...          38.25           155.00      1731.0           0.11660   \n","566  ...          34.12           126.70      1124.0           0.11390   \n","567  ...          39.42           184.60      1821.0           0.16500   \n","568  ...          30.37            59.16       268.6           0.08996   \n","\n","     compactness_worst  concavity_worst  concave points_worst  symmetry_worst  \\\n","0              0.66560           0.7119                0.2654          0.4601   \n","1              0.18660           0.2416                0.1860          0.2750   \n","2              0.42450           0.4504                0.2430          0.3613   \n","3              0.86630           0.6869                0.2575          0.6638   \n","4              0.20500           0.4000                0.1625          0.2364   \n","..                 ...              ...                   ...             ...   \n","564            0.21130           0.4107                0.2216          0.2060   \n","565            0.19220           0.3215                0.1628          0.2572   \n","566            0.30940           0.3403                0.1418          0.2218   \n","567            0.86810           0.9387                0.2650          0.4087   \n","568            0.06444           0.0000                0.0000          0.2871   \n","\n","     fractal_dimension_worst  Unnamed: 32  \n","0                    0.11890          NaN  \n","1                    0.08902          NaN  \n","2                    0.08758          NaN  \n","3                    0.17300          NaN  \n","4                    0.07678          NaN  \n","..                       ...          ...  \n","564                  0.07115          NaN  \n","565                  0.06637          NaN  \n","566                  0.07820          NaN  \n","567                  0.12400          NaN  \n","568                  0.07039          NaN  \n","\n","[569 rows x 33 columns]"],"text/html":["\n","  <div id=\"df-10f6410d-68f6-4be8-9c4a-19112ba189eb\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>diagnosis</th>\n","      <th>radius_mean</th>\n","      <th>texture_mean</th>\n","      <th>perimeter_mean</th>\n","      <th>area_mean</th>\n","      <th>smoothness_mean</th>\n","      <th>compactness_mean</th>\n","      <th>concavity_mean</th>\n","      <th>concave points_mean</th>\n","      <th>...</th>\n","      <th>texture_worst</th>\n","      <th>perimeter_worst</th>\n","      <th>area_worst</th>\n","      <th>smoothness_worst</th>\n","      <th>compactness_worst</th>\n","      <th>concavity_worst</th>\n","      <th>concave points_worst</th>\n","      <th>symmetry_worst</th>\n","      <th>fractal_dimension_worst</th>\n","      <th>Unnamed: 32</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>842302</td>\n","      <td>M</td>\n","      <td>17.99</td>\n","      <td>10.38</td>\n","      <td>122.80</td>\n","      <td>1001.0</td>\n","      <td>0.11840</td>\n","      <td>0.27760</td>\n","      <td>0.30010</td>\n","      <td>0.14710</td>\n","      <td>...</td>\n","      <td>17.33</td>\n","      <td>184.60</td>\n","      <td>2019.0</td>\n","      <td>0.16220</td>\n","      <td>0.66560</td>\n","      <td>0.7119</td>\n","      <td>0.2654</td>\n","      <td>0.4601</td>\n","      <td>0.11890</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>842517</td>\n","      <td>M</td>\n","      <td>20.57</td>\n","      <td>17.77</td>\n","      <td>132.90</td>\n","      <td>1326.0</td>\n","      <td>0.08474</td>\n","      <td>0.07864</td>\n","      <td>0.08690</td>\n","      <td>0.07017</td>\n","      <td>...</td>\n","      <td>23.41</td>\n","      <td>158.80</td>\n","      <td>1956.0</td>\n","      <td>0.12380</td>\n","      <td>0.18660</td>\n","      <td>0.2416</td>\n","      <td>0.1860</td>\n","      <td>0.2750</td>\n","      <td>0.08902</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>84300903</td>\n","      <td>M</td>\n","      <td>19.69</td>\n","      <td>21.25</td>\n","      <td>130.00</td>\n","      <td>1203.0</td>\n","      <td>0.10960</td>\n","      <td>0.15990</td>\n","      <td>0.19740</td>\n","      <td>0.12790</td>\n","      <td>...</td>\n","      <td>25.53</td>\n","      <td>152.50</td>\n","      <td>1709.0</td>\n","      <td>0.14440</td>\n","      <td>0.42450</td>\n","      <td>0.4504</td>\n","      <td>0.2430</td>\n","      <td>0.3613</td>\n","      <td>0.08758</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>84348301</td>\n","      <td>M</td>\n","      <td>11.42</td>\n","      <td>20.38</td>\n","      <td>77.58</td>\n","      <td>386.1</td>\n","      <td>0.14250</td>\n","      <td>0.28390</td>\n","      <td>0.24140</td>\n","      <td>0.10520</td>\n","      <td>...</td>\n","      <td>26.50</td>\n","      <td>98.87</td>\n","      <td>567.7</td>\n","      <td>0.20980</td>\n","      <td>0.86630</td>\n","      <td>0.6869</td>\n","      <td>0.2575</td>\n","      <td>0.6638</td>\n","      <td>0.17300</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>84358402</td>\n","      <td>M</td>\n","      <td>20.29</td>\n","      <td>14.34</td>\n","      <td>135.10</td>\n","      <td>1297.0</td>\n","      <td>0.10030</td>\n","      <td>0.13280</td>\n","      <td>0.19800</td>\n","      <td>0.10430</td>\n","      <td>...</td>\n","      <td>16.67</td>\n","      <td>152.20</td>\n","      <td>1575.0</td>\n","      <td>0.13740</td>\n","      <td>0.20500</td>\n","      <td>0.4000</td>\n","      <td>0.1625</td>\n","      <td>0.2364</td>\n","      <td>0.07678</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>564</th>\n","      <td>926424</td>\n","      <td>M</td>\n","      <td>21.56</td>\n","      <td>22.39</td>\n","      <td>142.00</td>\n","      <td>1479.0</td>\n","      <td>0.11100</td>\n","      <td>0.11590</td>\n","      <td>0.24390</td>\n","      <td>0.13890</td>\n","      <td>...</td>\n","      <td>26.40</td>\n","      <td>166.10</td>\n","      <td>2027.0</td>\n","      <td>0.14100</td>\n","      <td>0.21130</td>\n","      <td>0.4107</td>\n","      <td>0.2216</td>\n","      <td>0.2060</td>\n","      <td>0.07115</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>565</th>\n","      <td>926682</td>\n","      <td>M</td>\n","      <td>20.13</td>\n","      <td>28.25</td>\n","      <td>131.20</td>\n","      <td>1261.0</td>\n","      <td>0.09780</td>\n","      <td>0.10340</td>\n","      <td>0.14400</td>\n","      <td>0.09791</td>\n","      <td>...</td>\n","      <td>38.25</td>\n","      <td>155.00</td>\n","      <td>1731.0</td>\n","      <td>0.11660</td>\n","      <td>0.19220</td>\n","      <td>0.3215</td>\n","      <td>0.1628</td>\n","      <td>0.2572</td>\n","      <td>0.06637</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>566</th>\n","      <td>926954</td>\n","      <td>M</td>\n","      <td>16.60</td>\n","      <td>28.08</td>\n","      <td>108.30</td>\n","      <td>858.1</td>\n","      <td>0.08455</td>\n","      <td>0.10230</td>\n","      <td>0.09251</td>\n","      <td>0.05302</td>\n","      <td>...</td>\n","      <td>34.12</td>\n","      <td>126.70</td>\n","      <td>1124.0</td>\n","      <td>0.11390</td>\n","      <td>0.30940</td>\n","      <td>0.3403</td>\n","      <td>0.1418</td>\n","      <td>0.2218</td>\n","      <td>0.07820</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>567</th>\n","      <td>927241</td>\n","      <td>M</td>\n","      <td>20.60</td>\n","      <td>29.33</td>\n","      <td>140.10</td>\n","      <td>1265.0</td>\n","      <td>0.11780</td>\n","      <td>0.27700</td>\n","      <td>0.35140</td>\n","      <td>0.15200</td>\n","      <td>...</td>\n","      <td>39.42</td>\n","      <td>184.60</td>\n","      <td>1821.0</td>\n","      <td>0.16500</td>\n","      <td>0.86810</td>\n","      <td>0.9387</td>\n","      <td>0.2650</td>\n","      <td>0.4087</td>\n","      <td>0.12400</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>568</th>\n","      <td>92751</td>\n","      <td>B</td>\n","      <td>7.76</td>\n","      <td>24.54</td>\n","      <td>47.92</td>\n","      <td>181.0</td>\n","      <td>0.05263</td>\n","      <td>0.04362</td>\n","      <td>0.00000</td>\n","      <td>0.00000</td>\n","      <td>...</td>\n","      <td>30.37</td>\n","      <td>59.16</td>\n","      <td>268.6</td>\n","      <td>0.08996</td>\n","      <td>0.06444</td>\n","      <td>0.0000</td>\n","      <td>0.0000</td>\n","      <td>0.2871</td>\n","      <td>0.07039</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>569 rows × 33 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-10f6410d-68f6-4be8-9c4a-19112ba189eb')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-10f6410d-68f6-4be8-9c4a-19112ba189eb button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-10f6410d-68f6-4be8-9c4a-19112ba189eb');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-dc8d1e69-f8d4-4e81-99f1-0112d45e5776\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-dc8d1e69-f8d4-4e81-99f1-0112d45e5776')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-dc8d1e69-f8d4-4e81-99f1-0112d45e5776 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_f27e628c-c9a0-4be4-bfcf-40533eeedeff\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('data')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_f27e628c-c9a0-4be4-bfcf-40533eeedeff button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('data');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data"}},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["data.drop(['id',\"Unnamed: 32\"],axis=1,inplace=True)"],"metadata":{"id":"EDsNSa11xxtO","executionInfo":{"status":"ok","timestamp":1729325653824,"user_tz":-180,"elapsed":333,"user":{"displayName":"Kursat Seçkin","userId":"06128694202626292872"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":461},"id":"on9TsJOt1psN","executionInfo":{"status":"ok","timestamp":1729325657535,"user_tz":-180,"elapsed":425,"user":{"displayName":"Kursat Seçkin","userId":"06128694202626292872"}},"outputId":"dd445855-f416-474f-df76-fa3d85f3aa51"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    diagnosis  radius_mean  texture_mean  perimeter_mean  area_mean  \\\n","0           M        17.99         10.38          122.80     1001.0   \n","1           M        20.57         17.77          132.90     1326.0   \n","2           M        19.69         21.25          130.00     1203.0   \n","3           M        11.42         20.38           77.58      386.1   \n","4           M        20.29         14.34          135.10     1297.0   \n","..        ...          ...           ...             ...        ...   \n","564         M        21.56         22.39          142.00     1479.0   \n","565         M        20.13         28.25          131.20     1261.0   \n","566         M        16.60         28.08          108.30      858.1   \n","567         M        20.60         29.33          140.10     1265.0   \n","568         B         7.76         24.54           47.92      181.0   \n","\n","     smoothness_mean  compactness_mean  concavity_mean  concave points_mean  \\\n","0            0.11840           0.27760         0.30010              0.14710   \n","1            0.08474           0.07864         0.08690              0.07017   \n","2            0.10960           0.15990         0.19740              0.12790   \n","3            0.14250           0.28390         0.24140              0.10520   \n","4            0.10030           0.13280         0.19800              0.10430   \n","..               ...               ...             ...                  ...   \n","564          0.11100           0.11590         0.24390              0.13890   \n","565          0.09780           0.10340         0.14400              0.09791   \n","566          0.08455           0.10230         0.09251              0.05302   \n","567          0.11780           0.27700         0.35140              0.15200   \n","568          0.05263           0.04362         0.00000              0.00000   \n","\n","     symmetry_mean  ...  radius_worst  texture_worst  perimeter_worst  \\\n","0           0.2419  ...        25.380          17.33           184.60   \n","1           0.1812  ...        24.990          23.41           158.80   \n","2           0.2069  ...        23.570          25.53           152.50   \n","3           0.2597  ...        14.910          26.50            98.87   \n","4           0.1809  ...        22.540          16.67           152.20   \n","..             ...  ...           ...            ...              ...   \n","564         0.1726  ...        25.450          26.40           166.10   \n","565         0.1752  ...        23.690          38.25           155.00   \n","566         0.1590  ...        18.980          34.12           126.70   \n","567         0.2397  ...        25.740          39.42           184.60   \n","568         0.1587  ...         9.456          30.37            59.16   \n","\n","     area_worst  smoothness_worst  compactness_worst  concavity_worst  \\\n","0        2019.0           0.16220            0.66560           0.7119   \n","1        1956.0           0.12380            0.18660           0.2416   \n","2        1709.0           0.14440            0.42450           0.4504   \n","3         567.7           0.20980            0.86630           0.6869   \n","4        1575.0           0.13740            0.20500           0.4000   \n","..          ...               ...                ...              ...   \n","564      2027.0           0.14100            0.21130           0.4107   \n","565      1731.0           0.11660            0.19220           0.3215   \n","566      1124.0           0.11390            0.30940           0.3403   \n","567      1821.0           0.16500            0.86810           0.9387   \n","568       268.6           0.08996            0.06444           0.0000   \n","\n","     concave points_worst  symmetry_worst  fractal_dimension_worst  \n","0                  0.2654          0.4601                  0.11890  \n","1                  0.1860          0.2750                  0.08902  \n","2                  0.2430          0.3613                  0.08758  \n","3                  0.2575          0.6638                  0.17300  \n","4                  0.1625          0.2364                  0.07678  \n","..                    ...             ...                      ...  \n","564                0.2216          0.2060                  0.07115  \n","565                0.1628          0.2572                  0.06637  \n","566                0.1418          0.2218                  0.07820  \n","567                0.2650          0.4087                  0.12400  \n","568                0.0000          0.2871                  0.07039  \n","\n","[569 rows x 31 columns]"],"text/html":["\n","  <div id=\"df-995c1ab3-4e82-497d-af1f-004b8325b1fe\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>diagnosis</th>\n","      <th>radius_mean</th>\n","      <th>texture_mean</th>\n","      <th>perimeter_mean</th>\n","      <th>area_mean</th>\n","      <th>smoothness_mean</th>\n","      <th>compactness_mean</th>\n","      <th>concavity_mean</th>\n","      <th>concave points_mean</th>\n","      <th>symmetry_mean</th>\n","      <th>...</th>\n","      <th>radius_worst</th>\n","      <th>texture_worst</th>\n","      <th>perimeter_worst</th>\n","      <th>area_worst</th>\n","      <th>smoothness_worst</th>\n","      <th>compactness_worst</th>\n","      <th>concavity_worst</th>\n","      <th>concave points_worst</th>\n","      <th>symmetry_worst</th>\n","      <th>fractal_dimension_worst</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>M</td>\n","      <td>17.99</td>\n","      <td>10.38</td>\n","      <td>122.80</td>\n","      <td>1001.0</td>\n","      <td>0.11840</td>\n","      <td>0.27760</td>\n","      <td>0.30010</td>\n","      <td>0.14710</td>\n","      <td>0.2419</td>\n","      <td>...</td>\n","      <td>25.380</td>\n","      <td>17.33</td>\n","      <td>184.60</td>\n","      <td>2019.0</td>\n","      <td>0.16220</td>\n","      <td>0.66560</td>\n","      <td>0.7119</td>\n","      <td>0.2654</td>\n","      <td>0.4601</td>\n","      <td>0.11890</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>M</td>\n","      <td>20.57</td>\n","      <td>17.77</td>\n","      <td>132.90</td>\n","      <td>1326.0</td>\n","      <td>0.08474</td>\n","      <td>0.07864</td>\n","      <td>0.08690</td>\n","      <td>0.07017</td>\n","      <td>0.1812</td>\n","      <td>...</td>\n","      <td>24.990</td>\n","      <td>23.41</td>\n","      <td>158.80</td>\n","      <td>1956.0</td>\n","      <td>0.12380</td>\n","      <td>0.18660</td>\n","      <td>0.2416</td>\n","      <td>0.1860</td>\n","      <td>0.2750</td>\n","      <td>0.08902</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>M</td>\n","      <td>19.69</td>\n","      <td>21.25</td>\n","      <td>130.00</td>\n","      <td>1203.0</td>\n","      <td>0.10960</td>\n","      <td>0.15990</td>\n","      <td>0.19740</td>\n","      <td>0.12790</td>\n","      <td>0.2069</td>\n","      <td>...</td>\n","      <td>23.570</td>\n","      <td>25.53</td>\n","      <td>152.50</td>\n","      <td>1709.0</td>\n","      <td>0.14440</td>\n","      <td>0.42450</td>\n","      <td>0.4504</td>\n","      <td>0.2430</td>\n","      <td>0.3613</td>\n","      <td>0.08758</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>M</td>\n","      <td>11.42</td>\n","      <td>20.38</td>\n","      <td>77.58</td>\n","      <td>386.1</td>\n","      <td>0.14250</td>\n","      <td>0.28390</td>\n","      <td>0.24140</td>\n","      <td>0.10520</td>\n","      <td>0.2597</td>\n","      <td>...</td>\n","      <td>14.910</td>\n","      <td>26.50</td>\n","      <td>98.87</td>\n","      <td>567.7</td>\n","      <td>0.20980</td>\n","      <td>0.86630</td>\n","      <td>0.6869</td>\n","      <td>0.2575</td>\n","      <td>0.6638</td>\n","      <td>0.17300</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>M</td>\n","      <td>20.29</td>\n","      <td>14.34</td>\n","      <td>135.10</td>\n","      <td>1297.0</td>\n","      <td>0.10030</td>\n","      <td>0.13280</td>\n","      <td>0.19800</td>\n","      <td>0.10430</td>\n","      <td>0.1809</td>\n","      <td>...</td>\n","      <td>22.540</td>\n","      <td>16.67</td>\n","      <td>152.20</td>\n","      <td>1575.0</td>\n","      <td>0.13740</td>\n","      <td>0.20500</td>\n","      <td>0.4000</td>\n","      <td>0.1625</td>\n","      <td>0.2364</td>\n","      <td>0.07678</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>564</th>\n","      <td>M</td>\n","      <td>21.56</td>\n","      <td>22.39</td>\n","      <td>142.00</td>\n","      <td>1479.0</td>\n","      <td>0.11100</td>\n","      <td>0.11590</td>\n","      <td>0.24390</td>\n","      <td>0.13890</td>\n","      <td>0.1726</td>\n","      <td>...</td>\n","      <td>25.450</td>\n","      <td>26.40</td>\n","      <td>166.10</td>\n","      <td>2027.0</td>\n","      <td>0.14100</td>\n","      <td>0.21130</td>\n","      <td>0.4107</td>\n","      <td>0.2216</td>\n","      <td>0.2060</td>\n","      <td>0.07115</td>\n","    </tr>\n","    <tr>\n","      <th>565</th>\n","      <td>M</td>\n","      <td>20.13</td>\n","      <td>28.25</td>\n","      <td>131.20</td>\n","      <td>1261.0</td>\n","      <td>0.09780</td>\n","      <td>0.10340</td>\n","      <td>0.14400</td>\n","      <td>0.09791</td>\n","      <td>0.1752</td>\n","      <td>...</td>\n","      <td>23.690</td>\n","      <td>38.25</td>\n","      <td>155.00</td>\n","      <td>1731.0</td>\n","      <td>0.11660</td>\n","      <td>0.19220</td>\n","      <td>0.3215</td>\n","      <td>0.1628</td>\n","      <td>0.2572</td>\n","      <td>0.06637</td>\n","    </tr>\n","    <tr>\n","      <th>566</th>\n","      <td>M</td>\n","      <td>16.60</td>\n","      <td>28.08</td>\n","      <td>108.30</td>\n","      <td>858.1</td>\n","      <td>0.08455</td>\n","      <td>0.10230</td>\n","      <td>0.09251</td>\n","      <td>0.05302</td>\n","      <td>0.1590</td>\n","      <td>...</td>\n","      <td>18.980</td>\n","      <td>34.12</td>\n","      <td>126.70</td>\n","      <td>1124.0</td>\n","      <td>0.11390</td>\n","      <td>0.30940</td>\n","      <td>0.3403</td>\n","      <td>0.1418</td>\n","      <td>0.2218</td>\n","      <td>0.07820</td>\n","    </tr>\n","    <tr>\n","      <th>567</th>\n","      <td>M</td>\n","      <td>20.60</td>\n","      <td>29.33</td>\n","      <td>140.10</td>\n","      <td>1265.0</td>\n","      <td>0.11780</td>\n","      <td>0.27700</td>\n","      <td>0.35140</td>\n","      <td>0.15200</td>\n","      <td>0.2397</td>\n","      <td>...</td>\n","      <td>25.740</td>\n","      <td>39.42</td>\n","      <td>184.60</td>\n","      <td>1821.0</td>\n","      <td>0.16500</td>\n","      <td>0.86810</td>\n","      <td>0.9387</td>\n","      <td>0.2650</td>\n","      <td>0.4087</td>\n","      <td>0.12400</td>\n","    </tr>\n","    <tr>\n","      <th>568</th>\n","      <td>B</td>\n","      <td>7.76</td>\n","      <td>24.54</td>\n","      <td>47.92</td>\n","      <td>181.0</td>\n","      <td>0.05263</td>\n","      <td>0.04362</td>\n","      <td>0.00000</td>\n","      <td>0.00000</td>\n","      <td>0.1587</td>\n","      <td>...</td>\n","      <td>9.456</td>\n","      <td>30.37</td>\n","      <td>59.16</td>\n","      <td>268.6</td>\n","      <td>0.08996</td>\n","      <td>0.06444</td>\n","      <td>0.0000</td>\n","      <td>0.0000</td>\n","      <td>0.2871</td>\n","      <td>0.07039</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>569 rows × 31 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-995c1ab3-4e82-497d-af1f-004b8325b1fe')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-995c1ab3-4e82-497d-af1f-004b8325b1fe button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-995c1ab3-4e82-497d-af1f-004b8325b1fe');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0b5b58e0-0176-4f68-8dcd-46b1f833b245\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0b5b58e0-0176-4f68-8dcd-46b1f833b245')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0b5b58e0-0176-4f68-8dcd-46b1f833b245 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_2d1fa5bc-d105-42cd-937b-793519de55bc\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('data')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_2d1fa5bc-d105-42cd-937b-793519de55bc button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('data');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data"}},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["data.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"hAgoPOpk12ps","executionInfo":{"status":"ok","timestamp":1729325671151,"user_tz":-180,"elapsed":6,"user":{"displayName":"Kursat Seçkin","userId":"06128694202626292872"}},"outputId":"22a596b0-b826-4727-8d84-5c6343c7ad12"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["diagnosis                  0\n","radius_mean                0\n","texture_mean               0\n","perimeter_mean             0\n","area_mean                  0\n","smoothness_mean            0\n","compactness_mean           0\n","concavity_mean             0\n","concave points_mean        0\n","symmetry_mean              0\n","fractal_dimension_mean     0\n","radius_se                  0\n","texture_se                 0\n","perimeter_se               0\n","area_se                    0\n","smoothness_se              0\n","compactness_se             0\n","concavity_se               0\n","concave points_se          0\n","symmetry_se                0\n","fractal_dimension_se       0\n","radius_worst               0\n","texture_worst              0\n","perimeter_worst            0\n","area_worst                 0\n","smoothness_worst           0\n","compactness_worst          0\n","concavity_worst            0\n","concave points_worst       0\n","symmetry_worst             0\n","fractal_dimension_worst    0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>diagnosis</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>radius_mean</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>texture_mean</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>perimeter_mean</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>area_mean</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>smoothness_mean</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>compactness_mean</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>concavity_mean</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>concave points_mean</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>symmetry_mean</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>fractal_dimension_mean</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>radius_se</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>texture_se</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>perimeter_se</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>area_se</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>smoothness_se</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>compactness_se</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>concavity_se</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>concave points_se</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>symmetry_se</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>fractal_dimension_se</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>radius_worst</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>texture_worst</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>perimeter_worst</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>area_worst</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>smoothness_worst</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>compactness_worst</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>concavity_worst</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>concave points_worst</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>symmetry_worst</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>fractal_dimension_worst</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["m=data[data.diagnosis==\"M\"]\n","b=data[data.diagnosis==\"B\"]"],"metadata":{"id":"m56a7ALW16At","executionInfo":{"status":"ok","timestamp":1729325761831,"user_tz":-180,"elapsed":312,"user":{"displayName":"Kursat Seçkin","userId":"06128694202626292872"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["m,b"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"p0lauWho2QI1","executionInfo":{"status":"ok","timestamp":1729325769151,"user_tz":-180,"elapsed":324,"user":{"displayName":"Kursat Seçkin","userId":"06128694202626292872"}},"outputId":"cec223cc-2aab-448e-9396-235eeb217956"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(    diagnosis  radius_mean  texture_mean  perimeter_mean  area_mean  \\\n"," 0           M        17.99         10.38          122.80     1001.0   \n"," 1           M        20.57         17.77          132.90     1326.0   \n"," 2           M        19.69         21.25          130.00     1203.0   \n"," 3           M        11.42         20.38           77.58      386.1   \n"," 4           M        20.29         14.34          135.10     1297.0   \n"," ..        ...          ...           ...             ...        ...   \n"," 563         M        20.92         25.09          143.00     1347.0   \n"," 564         M        21.56         22.39          142.00     1479.0   \n"," 565         M        20.13         28.25          131.20     1261.0   \n"," 566         M        16.60         28.08          108.30      858.1   \n"," 567         M        20.60         29.33          140.10     1265.0   \n"," \n","      smoothness_mean  compactness_mean  concavity_mean  concave points_mean  \\\n"," 0            0.11840           0.27760         0.30010              0.14710   \n"," 1            0.08474           0.07864         0.08690              0.07017   \n"," 2            0.10960           0.15990         0.19740              0.12790   \n"," 3            0.14250           0.28390         0.24140              0.10520   \n"," 4            0.10030           0.13280         0.19800              0.10430   \n"," ..               ...               ...             ...                  ...   \n"," 563          0.10990           0.22360         0.31740              0.14740   \n"," 564          0.11100           0.11590         0.24390              0.13890   \n"," 565          0.09780           0.10340         0.14400              0.09791   \n"," 566          0.08455           0.10230         0.09251              0.05302   \n"," 567          0.11780           0.27700         0.35140              0.15200   \n"," \n","      symmetry_mean  ...  radius_worst  texture_worst  perimeter_worst  \\\n"," 0           0.2419  ...         25.38          17.33           184.60   \n"," 1           0.1812  ...         24.99          23.41           158.80   \n"," 2           0.2069  ...         23.57          25.53           152.50   \n"," 3           0.2597  ...         14.91          26.50            98.87   \n"," 4           0.1809  ...         22.54          16.67           152.20   \n"," ..             ...  ...           ...            ...              ...   \n"," 563         0.2149  ...         24.29          29.41           179.10   \n"," 564         0.1726  ...         25.45          26.40           166.10   \n"," 565         0.1752  ...         23.69          38.25           155.00   \n"," 566         0.1590  ...         18.98          34.12           126.70   \n"," 567         0.2397  ...         25.74          39.42           184.60   \n"," \n","      area_worst  smoothness_worst  compactness_worst  concavity_worst  \\\n"," 0        2019.0            0.1622             0.6656           0.7119   \n"," 1        1956.0            0.1238             0.1866           0.2416   \n"," 2        1709.0            0.1444             0.4245           0.4504   \n"," 3         567.7            0.2098             0.8663           0.6869   \n"," 4        1575.0            0.1374             0.2050           0.4000   \n"," ..          ...               ...                ...              ...   \n"," 563      1819.0            0.1407             0.4186           0.6599   \n"," 564      2027.0            0.1410             0.2113           0.4107   \n"," 565      1731.0            0.1166             0.1922           0.3215   \n"," 566      1124.0            0.1139             0.3094           0.3403   \n"," 567      1821.0            0.1650             0.8681           0.9387   \n"," \n","      concave points_worst  symmetry_worst  fractal_dimension_worst  \n"," 0                  0.2654          0.4601                  0.11890  \n"," 1                  0.1860          0.2750                  0.08902  \n"," 2                  0.2430          0.3613                  0.08758  \n"," 3                  0.2575          0.6638                  0.17300  \n"," 4                  0.1625          0.2364                  0.07678  \n"," ..                    ...             ...                      ...  \n"," 563                0.2542          0.2929                  0.09873  \n"," 564                0.2216          0.2060                  0.07115  \n"," 565                0.1628          0.2572                  0.06637  \n"," 566                0.1418          0.2218                  0.07820  \n"," 567                0.2650          0.4087                  0.12400  \n"," \n"," [212 rows x 31 columns],\n","     diagnosis  radius_mean  texture_mean  perimeter_mean  area_mean  \\\n"," 19          B       13.540         14.36           87.46      566.3   \n"," 20          B       13.080         15.71           85.63      520.0   \n"," 21          B        9.504         12.44           60.34      273.9   \n"," 37          B       13.030         18.42           82.61      523.8   \n"," 46          B        8.196         16.84           51.71      201.9   \n"," ..        ...          ...           ...             ...        ...   \n"," 558         B       14.590         22.68           96.39      657.1   \n"," 559         B       11.510         23.93           74.52      403.5   \n"," 560         B       14.050         27.15           91.38      600.4   \n"," 561         B       11.200         29.37           70.67      386.0   \n"," 568         B        7.760         24.54           47.92      181.0   \n"," \n","      smoothness_mean  compactness_mean  concavity_mean  concave points_mean  \\\n"," 19           0.09779           0.08129         0.06664             0.047810   \n"," 20           0.10750           0.12700         0.04568             0.031100   \n"," 21           0.10240           0.06492         0.02956             0.020760   \n"," 37           0.08983           0.03766         0.02562             0.029230   \n"," 46           0.08600           0.05943         0.01588             0.005917   \n"," ..               ...               ...             ...                  ...   \n"," 558          0.08473           0.13300         0.10290             0.037360   \n"," 559          0.09261           0.10210         0.11120             0.041050   \n"," 560          0.09929           0.11260         0.04462             0.043040   \n"," 561          0.07449           0.03558         0.00000             0.000000   \n"," 568          0.05263           0.04362         0.00000             0.000000   \n"," \n","      symmetry_mean  ...  radius_worst  texture_worst  perimeter_worst  \\\n"," 19          0.1885  ...        15.110          19.26            99.70   \n"," 20          0.1967  ...        14.500          20.49            96.09   \n"," 21          0.1815  ...        10.230          15.66            65.13   \n"," 37          0.1467  ...        13.300          22.81            84.46   \n"," 46          0.1769  ...         8.964          21.96            57.26   \n"," ..             ...  ...           ...            ...              ...   \n"," 558         0.1454  ...        15.480          27.27           105.90   \n"," 559         0.1388  ...        12.480          37.16            82.28   \n"," 560         0.1537  ...        15.300          33.17           100.20   \n"," 561         0.1060  ...        11.920          38.30            75.19   \n"," 568         0.1587  ...         9.456          30.37            59.16   \n"," \n","      area_worst  smoothness_worst  compactness_worst  concavity_worst  \\\n"," 19        711.2           0.14400            0.17730          0.23900   \n"," 20        630.5           0.13120            0.27760          0.18900   \n"," 21        314.9           0.13240            0.11480          0.08867   \n"," 37        545.9           0.09701            0.04619          0.04833   \n"," 46        242.2           0.12970            0.13570          0.06880   \n"," ..          ...               ...                ...              ...   \n"," 558       733.5           0.10260            0.31710          0.36620   \n"," 559       474.2           0.12980            0.25170          0.36300   \n"," 560       706.7           0.12410            0.22640          0.13260   \n"," 561       439.6           0.09267            0.05494          0.00000   \n"," 568       268.6           0.08996            0.06444          0.00000   \n"," \n","      concave points_worst  symmetry_worst  fractal_dimension_worst  \n"," 19                0.12880          0.2977                  0.07259  \n"," 20                0.07283          0.3184                  0.08183  \n"," 21                0.06227          0.2450                  0.07773  \n"," 37                0.05013          0.1987                  0.06169  \n"," 46                0.02564          0.3105                  0.07409  \n"," ..                    ...             ...                      ...  \n"," 558               0.11050          0.2258                  0.08004  \n"," 559               0.09653          0.2112                  0.08732  \n"," 560               0.10480          0.2250                  0.08321  \n"," 561               0.00000          0.1566                  0.05905  \n"," 568               0.00000          0.2871                  0.07039  \n"," \n"," [357 rows x 31 columns])"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["plt.scatter(m.radius_mean,m.texture_mean,color=\"red\",label=\"Kötü\",alpha=0.4)\n","plt.scatter(b.radius_mean,b.texture_mean,color=\"blue\",label=\"iyi\",alpha=0.8)\n","plt.legend()\n","plt.xlabel(\"radius mean\")\n","plt.ylabel(\"texture mean\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":466},"id":"FvRKKjeX2Rvm","executionInfo":{"status":"ok","timestamp":1729325881636,"user_tz":-180,"elapsed":824,"user":{"displayName":"Kursat Seçkin","userId":"06128694202626292872"}},"outputId":"fb380461-a25e-4315-a034-0f2992b4fd6e"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0, 0.5, 'texture mean')"]},"metadata":{},"execution_count":10},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["data.diagnosis=[1 if i==\"M\" else 0 for i in data.diagnosis]"],"metadata":{"id":"z-Do0r6X2tRT","executionInfo":{"status":"ok","timestamp":1729326106476,"user_tz":-180,"elapsed":375,"user":{"displayName":"Kursat Seçkin","userId":"06128694202626292872"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":461},"id":"1ok_n9Fu3kRg","executionInfo":{"status":"ok","timestamp":1729326110288,"user_tz":-180,"elapsed":360,"user":{"displayName":"Kursat Seçkin","userId":"06128694202626292872"}},"outputId":"b67b5de7-61fc-4c26-f1f4-61aa6214abfb"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     diagnosis  radius_mean  texture_mean  perimeter_mean  area_mean  \\\n","0            1        17.99         10.38          122.80     1001.0   \n","1            1        20.57         17.77          132.90     1326.0   \n","2            1        19.69         21.25          130.00     1203.0   \n","3            1        11.42         20.38           77.58      386.1   \n","4            1        20.29         14.34          135.10     1297.0   \n","..         ...          ...           ...             ...        ...   \n","564          1        21.56         22.39          142.00     1479.0   \n","565          1        20.13         28.25          131.20     1261.0   \n","566          1        16.60         28.08          108.30      858.1   \n","567          1        20.60         29.33          140.10     1265.0   \n","568          0         7.76         24.54           47.92      181.0   \n","\n","     smoothness_mean  compactness_mean  concavity_mean  concave points_mean  \\\n","0            0.11840           0.27760         0.30010              0.14710   \n","1            0.08474           0.07864         0.08690              0.07017   \n","2            0.10960           0.15990         0.19740              0.12790   \n","3            0.14250           0.28390         0.24140              0.10520   \n","4            0.10030           0.13280         0.19800              0.10430   \n","..               ...               ...             ...                  ...   \n","564          0.11100           0.11590         0.24390              0.13890   \n","565          0.09780           0.10340         0.14400              0.09791   \n","566          0.08455           0.10230         0.09251              0.05302   \n","567          0.11780           0.27700         0.35140              0.15200   \n","568          0.05263           0.04362         0.00000              0.00000   \n","\n","     symmetry_mean  ...  radius_worst  texture_worst  perimeter_worst  \\\n","0           0.2419  ...        25.380          17.33           184.60   \n","1           0.1812  ...        24.990          23.41           158.80   \n","2           0.2069  ...        23.570          25.53           152.50   \n","3           0.2597  ...        14.910          26.50            98.87   \n","4           0.1809  ...        22.540          16.67           152.20   \n","..             ...  ...           ...            ...              ...   \n","564         0.1726  ...        25.450          26.40           166.10   \n","565         0.1752  ...        23.690          38.25           155.00   \n","566         0.1590  ...        18.980          34.12           126.70   \n","567         0.2397  ...        25.740          39.42           184.60   \n","568         0.1587  ...         9.456          30.37            59.16   \n","\n","     area_worst  smoothness_worst  compactness_worst  concavity_worst  \\\n","0        2019.0           0.16220            0.66560           0.7119   \n","1        1956.0           0.12380            0.18660           0.2416   \n","2        1709.0           0.14440            0.42450           0.4504   \n","3         567.7           0.20980            0.86630           0.6869   \n","4        1575.0           0.13740            0.20500           0.4000   \n","..          ...               ...                ...              ...   \n","564      2027.0           0.14100            0.21130           0.4107   \n","565      1731.0           0.11660            0.19220           0.3215   \n","566      1124.0           0.11390            0.30940           0.3403   \n","567      1821.0           0.16500            0.86810           0.9387   \n","568       268.6           0.08996            0.06444           0.0000   \n","\n","     concave points_worst  symmetry_worst  fractal_dimension_worst  \n","0                  0.2654          0.4601                  0.11890  \n","1                  0.1860          0.2750                  0.08902  \n","2                  0.2430          0.3613                  0.08758  \n","3                  0.2575          0.6638                  0.17300  \n","4                  0.1625          0.2364                  0.07678  \n","..                    ...             ...                      ...  \n","564                0.2216          0.2060                  0.07115  \n","565                0.1628          0.2572                  0.06637  \n","566                0.1418          0.2218                  0.07820  \n","567                0.2650          0.4087                  0.12400  \n","568                0.0000          0.2871                  0.07039  \n","\n","[569 rows x 31 columns]"],"text/html":["\n","  <div id=\"df-abf89e6d-b862-4814-9581-7e83d37fec08\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>diagnosis</th>\n","      <th>radius_mean</th>\n","      <th>texture_mean</th>\n","      <th>perimeter_mean</th>\n","      <th>area_mean</th>\n","      <th>smoothness_mean</th>\n","      <th>compactness_mean</th>\n","      <th>concavity_mean</th>\n","      <th>concave points_mean</th>\n","      <th>symmetry_mean</th>\n","      <th>...</th>\n","      <th>radius_worst</th>\n","      <th>texture_worst</th>\n","      <th>perimeter_worst</th>\n","      <th>area_worst</th>\n","      <th>smoothness_worst</th>\n","      <th>compactness_worst</th>\n","      <th>concavity_worst</th>\n","      <th>concave points_worst</th>\n","      <th>symmetry_worst</th>\n","      <th>fractal_dimension_worst</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>17.99</td>\n","      <td>10.38</td>\n","      <td>122.80</td>\n","      <td>1001.0</td>\n","      <td>0.11840</td>\n","      <td>0.27760</td>\n","      <td>0.30010</td>\n","      <td>0.14710</td>\n","      <td>0.2419</td>\n","      <td>...</td>\n","      <td>25.380</td>\n","      <td>17.33</td>\n","      <td>184.60</td>\n","      <td>2019.0</td>\n","      <td>0.16220</td>\n","      <td>0.66560</td>\n","      <td>0.7119</td>\n","      <td>0.2654</td>\n","      <td>0.4601</td>\n","      <td>0.11890</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>20.57</td>\n","      <td>17.77</td>\n","      <td>132.90</td>\n","      <td>1326.0</td>\n","      <td>0.08474</td>\n","      <td>0.07864</td>\n","      <td>0.08690</td>\n","      <td>0.07017</td>\n","      <td>0.1812</td>\n","      <td>...</td>\n","      <td>24.990</td>\n","      <td>23.41</td>\n","      <td>158.80</td>\n","      <td>1956.0</td>\n","      <td>0.12380</td>\n","      <td>0.18660</td>\n","      <td>0.2416</td>\n","      <td>0.1860</td>\n","      <td>0.2750</td>\n","      <td>0.08902</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>19.69</td>\n","      <td>21.25</td>\n","      <td>130.00</td>\n","      <td>1203.0</td>\n","      <td>0.10960</td>\n","      <td>0.15990</td>\n","      <td>0.19740</td>\n","      <td>0.12790</td>\n","      <td>0.2069</td>\n","      <td>...</td>\n","      <td>23.570</td>\n","      <td>25.53</td>\n","      <td>152.50</td>\n","      <td>1709.0</td>\n","      <td>0.14440</td>\n","      <td>0.42450</td>\n","      <td>0.4504</td>\n","      <td>0.2430</td>\n","      <td>0.3613</td>\n","      <td>0.08758</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>11.42</td>\n","      <td>20.38</td>\n","      <td>77.58</td>\n","      <td>386.1</td>\n","      <td>0.14250</td>\n","      <td>0.28390</td>\n","      <td>0.24140</td>\n","      <td>0.10520</td>\n","      <td>0.2597</td>\n","      <td>...</td>\n","      <td>14.910</td>\n","      <td>26.50</td>\n","      <td>98.87</td>\n","      <td>567.7</td>\n","      <td>0.20980</td>\n","      <td>0.86630</td>\n","      <td>0.6869</td>\n","      <td>0.2575</td>\n","      <td>0.6638</td>\n","      <td>0.17300</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>20.29</td>\n","      <td>14.34</td>\n","      <td>135.10</td>\n","      <td>1297.0</td>\n","      <td>0.10030</td>\n","      <td>0.13280</td>\n","      <td>0.19800</td>\n","      <td>0.10430</td>\n","      <td>0.1809</td>\n","      <td>...</td>\n","      <td>22.540</td>\n","      <td>16.67</td>\n","      <td>152.20</td>\n","      <td>1575.0</td>\n","      <td>0.13740</td>\n","      <td>0.20500</td>\n","      <td>0.4000</td>\n","      <td>0.1625</td>\n","      <td>0.2364</td>\n","      <td>0.07678</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>564</th>\n","      <td>1</td>\n","      <td>21.56</td>\n","      <td>22.39</td>\n","      <td>142.00</td>\n","      <td>1479.0</td>\n","      <td>0.11100</td>\n","      <td>0.11590</td>\n","      <td>0.24390</td>\n","      <td>0.13890</td>\n","      <td>0.1726</td>\n","      <td>...</td>\n","      <td>25.450</td>\n","      <td>26.40</td>\n","      <td>166.10</td>\n","      <td>2027.0</td>\n","      <td>0.14100</td>\n","      <td>0.21130</td>\n","      <td>0.4107</td>\n","      <td>0.2216</td>\n","      <td>0.2060</td>\n","      <td>0.07115</td>\n","    </tr>\n","    <tr>\n","      <th>565</th>\n","      <td>1</td>\n","      <td>20.13</td>\n","      <td>28.25</td>\n","      <td>131.20</td>\n","      <td>1261.0</td>\n","      <td>0.09780</td>\n","      <td>0.10340</td>\n","      <td>0.14400</td>\n","      <td>0.09791</td>\n","      <td>0.1752</td>\n","      <td>...</td>\n","      <td>23.690</td>\n","      <td>38.25</td>\n","      <td>155.00</td>\n","      <td>1731.0</td>\n","      <td>0.11660</td>\n","      <td>0.19220</td>\n","      <td>0.3215</td>\n","      <td>0.1628</td>\n","      <td>0.2572</td>\n","      <td>0.06637</td>\n","    </tr>\n","    <tr>\n","      <th>566</th>\n","      <td>1</td>\n","      <td>16.60</td>\n","      <td>28.08</td>\n","      <td>108.30</td>\n","      <td>858.1</td>\n","      <td>0.08455</td>\n","      <td>0.10230</td>\n","      <td>0.09251</td>\n","      <td>0.05302</td>\n","      <td>0.1590</td>\n","      <td>...</td>\n","      <td>18.980</td>\n","      <td>34.12</td>\n","      <td>126.70</td>\n","      <td>1124.0</td>\n","      <td>0.11390</td>\n","      <td>0.30940</td>\n","      <td>0.3403</td>\n","      <td>0.1418</td>\n","      <td>0.2218</td>\n","      <td>0.07820</td>\n","    </tr>\n","    <tr>\n","      <th>567</th>\n","      <td>1</td>\n","      <td>20.60</td>\n","      <td>29.33</td>\n","      <td>140.10</td>\n","      <td>1265.0</td>\n","      <td>0.11780</td>\n","      <td>0.27700</td>\n","      <td>0.35140</td>\n","      <td>0.15200</td>\n","      <td>0.2397</td>\n","      <td>...</td>\n","      <td>25.740</td>\n","      <td>39.42</td>\n","      <td>184.60</td>\n","      <td>1821.0</td>\n","      <td>0.16500</td>\n","      <td>0.86810</td>\n","      <td>0.9387</td>\n","      <td>0.2650</td>\n","      <td>0.4087</td>\n","      <td>0.12400</td>\n","    </tr>\n","    <tr>\n","      <th>568</th>\n","      <td>0</td>\n","      <td>7.76</td>\n","      <td>24.54</td>\n","      <td>47.92</td>\n","      <td>181.0</td>\n","      <td>0.05263</td>\n","      <td>0.04362</td>\n","      <td>0.00000</td>\n","      <td>0.00000</td>\n","      <td>0.1587</td>\n","      <td>...</td>\n","      <td>9.456</td>\n","      <td>30.37</td>\n","      <td>59.16</td>\n","      <td>268.6</td>\n","      <td>0.08996</td>\n","      <td>0.06444</td>\n","      <td>0.0000</td>\n","      <td>0.0000</td>\n","      <td>0.2871</td>\n","      <td>0.07039</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>569 rows × 31 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-abf89e6d-b862-4814-9581-7e83d37fec08')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-abf89e6d-b862-4814-9581-7e83d37fec08 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-abf89e6d-b862-4814-9581-7e83d37fec08');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0763ad92-b199-438c-85ac-5fb99bb7094d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0763ad92-b199-438c-85ac-5fb99bb7094d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0763ad92-b199-438c-85ac-5fb99bb7094d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_d62fbc39-be2e-409f-83f0-58e6b930e37d\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('data')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_d62fbc39-be2e-409f-83f0-58e6b930e37d button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('data');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data"}},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["x=data.iloc[:,1:]\n","y=data.diagnosis.values"],"metadata":{"id":"no_1dkQ_3lFp","executionInfo":{"status":"ok","timestamp":1729326208454,"user_tz":-180,"elapsed":297,"user":{"displayName":"Kursat Seçkin","userId":"06128694202626292872"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":["x"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":461},"id":"h4zIqmHr3w-u","executionInfo":{"status":"ok","timestamp":1729327959330,"user_tz":-180,"elapsed":311,"user":{"displayName":"Kursat Seçkin","userId":"06128694202626292872"}},"outputId":"d713f64a-8c49-4bf7-87e0-d228d071dcff"},"execution_count":56,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     radius_mean  texture_mean  perimeter_mean  area_mean  smoothness_mean  \\\n","0          17.99         10.38          122.80     1001.0          0.11840   \n","1          20.57         17.77          132.90     1326.0          0.08474   \n","2          19.69         21.25          130.00     1203.0          0.10960   \n","3          11.42         20.38           77.58      386.1          0.14250   \n","4          20.29         14.34          135.10     1297.0          0.10030   \n","..           ...           ...             ...        ...              ...   \n","564        21.56         22.39          142.00     1479.0          0.11100   \n","565        20.13         28.25          131.20     1261.0          0.09780   \n","566        16.60         28.08          108.30      858.1          0.08455   \n","567        20.60         29.33          140.10     1265.0          0.11780   \n","568         7.76         24.54           47.92      181.0          0.05263   \n","\n","     compactness_mean  concavity_mean  concave points_mean  symmetry_mean  \\\n","0             0.27760         0.30010              0.14710         0.2419   \n","1             0.07864         0.08690              0.07017         0.1812   \n","2             0.15990         0.19740              0.12790         0.2069   \n","3             0.28390         0.24140              0.10520         0.2597   \n","4             0.13280         0.19800              0.10430         0.1809   \n","..                ...             ...                  ...            ...   \n","564           0.11590         0.24390              0.13890         0.1726   \n","565           0.10340         0.14400              0.09791         0.1752   \n","566           0.10230         0.09251              0.05302         0.1590   \n","567           0.27700         0.35140              0.15200         0.2397   \n","568           0.04362         0.00000              0.00000         0.1587   \n","\n","     fractal_dimension_mean  ...  radius_worst  texture_worst  \\\n","0                   0.07871  ...        25.380          17.33   \n","1                   0.05667  ...        24.990          23.41   \n","2                   0.05999  ...        23.570          25.53   \n","3                   0.09744  ...        14.910          26.50   \n","4                   0.05883  ...        22.540          16.67   \n","..                      ...  ...           ...            ...   \n","564                 0.05623  ...        25.450          26.40   \n","565                 0.05533  ...        23.690          38.25   \n","566                 0.05648  ...        18.980          34.12   \n","567                 0.07016  ...        25.740          39.42   \n","568                 0.05884  ...         9.456          30.37   \n","\n","     perimeter_worst  area_worst  smoothness_worst  compactness_worst  \\\n","0             184.60      2019.0           0.16220            0.66560   \n","1             158.80      1956.0           0.12380            0.18660   \n","2             152.50      1709.0           0.14440            0.42450   \n","3              98.87       567.7           0.20980            0.86630   \n","4             152.20      1575.0           0.13740            0.20500   \n","..               ...         ...               ...                ...   \n","564           166.10      2027.0           0.14100            0.21130   \n","565           155.00      1731.0           0.11660            0.19220   \n","566           126.70      1124.0           0.11390            0.30940   \n","567           184.60      1821.0           0.16500            0.86810   \n","568            59.16       268.6           0.08996            0.06444   \n","\n","     concavity_worst  concave points_worst  symmetry_worst  \\\n","0             0.7119                0.2654          0.4601   \n","1             0.2416                0.1860          0.2750   \n","2             0.4504                0.2430          0.3613   \n","3             0.6869                0.2575          0.6638   \n","4             0.4000                0.1625          0.2364   \n","..               ...                   ...             ...   \n","564           0.4107                0.2216          0.2060   \n","565           0.3215                0.1628          0.2572   \n","566           0.3403                0.1418          0.2218   \n","567           0.9387                0.2650          0.4087   \n","568           0.0000                0.0000          0.2871   \n","\n","     fractal_dimension_worst  \n","0                    0.11890  \n","1                    0.08902  \n","2                    0.08758  \n","3                    0.17300  \n","4                    0.07678  \n","..                       ...  \n","564                  0.07115  \n","565                  0.06637  \n","566                  0.07820  \n","567                  0.12400  \n","568                  0.07039  \n","\n","[569 rows x 30 columns]"],"text/html":["\n","  <div id=\"df-654bcb12-fe04-4c7c-936a-1105c469f20f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>radius_mean</th>\n","      <th>texture_mean</th>\n","      <th>perimeter_mean</th>\n","      <th>area_mean</th>\n","      <th>smoothness_mean</th>\n","      <th>compactness_mean</th>\n","      <th>concavity_mean</th>\n","      <th>concave points_mean</th>\n","      <th>symmetry_mean</th>\n","      <th>fractal_dimension_mean</th>\n","      <th>...</th>\n","      <th>radius_worst</th>\n","      <th>texture_worst</th>\n","      <th>perimeter_worst</th>\n","      <th>area_worst</th>\n","      <th>smoothness_worst</th>\n","      <th>compactness_worst</th>\n","      <th>concavity_worst</th>\n","      <th>concave points_worst</th>\n","      <th>symmetry_worst</th>\n","      <th>fractal_dimension_worst</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>17.99</td>\n","      <td>10.38</td>\n","      <td>122.80</td>\n","      <td>1001.0</td>\n","      <td>0.11840</td>\n","      <td>0.27760</td>\n","      <td>0.30010</td>\n","      <td>0.14710</td>\n","      <td>0.2419</td>\n","      <td>0.07871</td>\n","      <td>...</td>\n","      <td>25.380</td>\n","      <td>17.33</td>\n","      <td>184.60</td>\n","      <td>2019.0</td>\n","      <td>0.16220</td>\n","      <td>0.66560</td>\n","      <td>0.7119</td>\n","      <td>0.2654</td>\n","      <td>0.4601</td>\n","      <td>0.11890</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>20.57</td>\n","      <td>17.77</td>\n","      <td>132.90</td>\n","      <td>1326.0</td>\n","      <td>0.08474</td>\n","      <td>0.07864</td>\n","      <td>0.08690</td>\n","      <td>0.07017</td>\n","      <td>0.1812</td>\n","      <td>0.05667</td>\n","      <td>...</td>\n","      <td>24.990</td>\n","      <td>23.41</td>\n","      <td>158.80</td>\n","      <td>1956.0</td>\n","      <td>0.12380</td>\n","      <td>0.18660</td>\n","      <td>0.2416</td>\n","      <td>0.1860</td>\n","      <td>0.2750</td>\n","      <td>0.08902</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>19.69</td>\n","      <td>21.25</td>\n","      <td>130.00</td>\n","      <td>1203.0</td>\n","      <td>0.10960</td>\n","      <td>0.15990</td>\n","      <td>0.19740</td>\n","      <td>0.12790</td>\n","      <td>0.2069</td>\n","      <td>0.05999</td>\n","      <td>...</td>\n","      <td>23.570</td>\n","      <td>25.53</td>\n","      <td>152.50</td>\n","      <td>1709.0</td>\n","      <td>0.14440</td>\n","      <td>0.42450</td>\n","      <td>0.4504</td>\n","      <td>0.2430</td>\n","      <td>0.3613</td>\n","      <td>0.08758</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>11.42</td>\n","      <td>20.38</td>\n","      <td>77.58</td>\n","      <td>386.1</td>\n","      <td>0.14250</td>\n","      <td>0.28390</td>\n","      <td>0.24140</td>\n","      <td>0.10520</td>\n","      <td>0.2597</td>\n","      <td>0.09744</td>\n","      <td>...</td>\n","      <td>14.910</td>\n","      <td>26.50</td>\n","      <td>98.87</td>\n","      <td>567.7</td>\n","      <td>0.20980</td>\n","      <td>0.86630</td>\n","      <td>0.6869</td>\n","      <td>0.2575</td>\n","      <td>0.6638</td>\n","      <td>0.17300</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>20.29</td>\n","      <td>14.34</td>\n","      <td>135.10</td>\n","      <td>1297.0</td>\n","      <td>0.10030</td>\n","      <td>0.13280</td>\n","      <td>0.19800</td>\n","      <td>0.10430</td>\n","      <td>0.1809</td>\n","      <td>0.05883</td>\n","      <td>...</td>\n","      <td>22.540</td>\n","      <td>16.67</td>\n","      <td>152.20</td>\n","      <td>1575.0</td>\n","      <td>0.13740</td>\n","      <td>0.20500</td>\n","      <td>0.4000</td>\n","      <td>0.1625</td>\n","      <td>0.2364</td>\n","      <td>0.07678</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>564</th>\n","      <td>21.56</td>\n","      <td>22.39</td>\n","      <td>142.00</td>\n","      <td>1479.0</td>\n","      <td>0.11100</td>\n","      <td>0.11590</td>\n","      <td>0.24390</td>\n","      <td>0.13890</td>\n","      <td>0.1726</td>\n","      <td>0.05623</td>\n","      <td>...</td>\n","      <td>25.450</td>\n","      <td>26.40</td>\n","      <td>166.10</td>\n","      <td>2027.0</td>\n","      <td>0.14100</td>\n","      <td>0.21130</td>\n","      <td>0.4107</td>\n","      <td>0.2216</td>\n","      <td>0.2060</td>\n","      <td>0.07115</td>\n","    </tr>\n","    <tr>\n","      <th>565</th>\n","      <td>20.13</td>\n","      <td>28.25</td>\n","      <td>131.20</td>\n","      <td>1261.0</td>\n","      <td>0.09780</td>\n","      <td>0.10340</td>\n","      <td>0.14400</td>\n","      <td>0.09791</td>\n","      <td>0.1752</td>\n","      <td>0.05533</td>\n","      <td>...</td>\n","      <td>23.690</td>\n","      <td>38.25</td>\n","      <td>155.00</td>\n","      <td>1731.0</td>\n","      <td>0.11660</td>\n","      <td>0.19220</td>\n","      <td>0.3215</td>\n","      <td>0.1628</td>\n","      <td>0.2572</td>\n","      <td>0.06637</td>\n","    </tr>\n","    <tr>\n","      <th>566</th>\n","      <td>16.60</td>\n","      <td>28.08</td>\n","      <td>108.30</td>\n","      <td>858.1</td>\n","      <td>0.08455</td>\n","      <td>0.10230</td>\n","      <td>0.09251</td>\n","      <td>0.05302</td>\n","      <td>0.1590</td>\n","      <td>0.05648</td>\n","      <td>...</td>\n","      <td>18.980</td>\n","      <td>34.12</td>\n","      <td>126.70</td>\n","      <td>1124.0</td>\n","      <td>0.11390</td>\n","      <td>0.30940</td>\n","      <td>0.3403</td>\n","      <td>0.1418</td>\n","      <td>0.2218</td>\n","      <td>0.07820</td>\n","    </tr>\n","    <tr>\n","      <th>567</th>\n","      <td>20.60</td>\n","      <td>29.33</td>\n","      <td>140.10</td>\n","      <td>1265.0</td>\n","      <td>0.11780</td>\n","      <td>0.27700</td>\n","      <td>0.35140</td>\n","      <td>0.15200</td>\n","      <td>0.2397</td>\n","      <td>0.07016</td>\n","      <td>...</td>\n","      <td>25.740</td>\n","      <td>39.42</td>\n","      <td>184.60</td>\n","      <td>1821.0</td>\n","      <td>0.16500</td>\n","      <td>0.86810</td>\n","      <td>0.9387</td>\n","      <td>0.2650</td>\n","      <td>0.4087</td>\n","      <td>0.12400</td>\n","    </tr>\n","    <tr>\n","      <th>568</th>\n","      <td>7.76</td>\n","      <td>24.54</td>\n","      <td>47.92</td>\n","      <td>181.0</td>\n","      <td>0.05263</td>\n","      <td>0.04362</td>\n","      <td>0.00000</td>\n","      <td>0.00000</td>\n","      <td>0.1587</td>\n","      <td>0.05884</td>\n","      <td>...</td>\n","      <td>9.456</td>\n","      <td>30.37</td>\n","      <td>59.16</td>\n","      <td>268.6</td>\n","      <td>0.08996</td>\n","      <td>0.06444</td>\n","      <td>0.0000</td>\n","      <td>0.0000</td>\n","      <td>0.2871</td>\n","      <td>0.07039</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>569 rows × 30 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-654bcb12-fe04-4c7c-936a-1105c469f20f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-654bcb12-fe04-4c7c-936a-1105c469f20f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-654bcb12-fe04-4c7c-936a-1105c469f20f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-933c020a-49d3-4041-87ca-a875e57c2cb6\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-933c020a-49d3-4041-87ca-a875e57c2cb6')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-933c020a-49d3-4041-87ca-a875e57c2cb6 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_ecc5c170-260e-45b2-85f2-cea850ac6bb7\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('x')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_ecc5c170-260e-45b2-85f2-cea850ac6bb7 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('x');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"x"}},"metadata":{},"execution_count":56}]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=23)\n","\n"],"metadata":{"id":"87yAPTrM34G6","executionInfo":{"status":"ok","timestamp":1729326316784,"user_tz":-180,"elapsed":325,"user":{"displayName":"Kursat Seçkin","userId":"06128694202626292872"}}},"execution_count":23,"outputs":[]},{"cell_type":"code","source":["from sklearn.preprocessing import StandardScaler\n","sc=StandardScaler()\n","x_train1=sc.fit_transform(x_train)\n","x_test1=sc.transform(x_test)"],"metadata":{"id":"JnVjEsF24Jui","executionInfo":{"status":"ok","timestamp":1729326499210,"user_tz":-180,"elapsed":308,"user":{"displayName":"Kursat Seçkin","userId":"06128694202626292872"}}},"execution_count":25,"outputs":[]},{"cell_type":"code","source":["from sklearn.linear_model import LogisticRegression\n","lr=LogisticRegression()\n","lr.fit(x_train1,y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":80},"id":"LXPtoUdU4aHw","executionInfo":{"status":"ok","timestamp":1729326519670,"user_tz":-180,"elapsed":666,"user":{"displayName":"Kursat Seçkin","userId":"06128694202626292872"}},"outputId":"fc614466-28d1-45fc-96e1-2e0e9904bdbf"},"execution_count":26,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LogisticRegression()"],"text/html":["<style>#sk-container-id-1 {\n","  /* Definition of color scheme common for light and dark mode */\n","  --sklearn-color-text: black;\n","  --sklearn-color-line: gray;\n","  /* Definition of color scheme for unfitted estimators */\n","  --sklearn-color-unfitted-level-0: #fff5e6;\n","  --sklearn-color-unfitted-level-1: #f6e4d2;\n","  --sklearn-color-unfitted-level-2: #ffe0b3;\n","  --sklearn-color-unfitted-level-3: chocolate;\n","  /* Definition of color scheme for fitted estimators */\n","  --sklearn-color-fitted-level-0: #f0f8ff;\n","  --sklearn-color-fitted-level-1: #d4ebff;\n","  --sklearn-color-fitted-level-2: #b3dbfd;\n","  --sklearn-color-fitted-level-3: cornflowerblue;\n","\n","  /* Specific color for light theme */\n","  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n","  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n","  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n","  --sklearn-color-icon: #696969;\n","\n","  @media (prefers-color-scheme: dark) {\n","    /* Redefinition of color scheme for dark theme */\n","    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n","    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n","    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n","    --sklearn-color-icon: #878787;\n","  }\n","}\n","\n","#sk-container-id-1 {\n","  color: var(--sklearn-color-text);\n","}\n","\n","#sk-container-id-1 pre {\n","  padding: 0;\n","}\n","\n","#sk-container-id-1 input.sk-hidden--visually {\n","  border: 0;\n","  clip: rect(1px 1px 1px 1px);\n","  clip: rect(1px, 1px, 1px, 1px);\n","  height: 1px;\n","  margin: -1px;\n","  overflow: hidden;\n","  padding: 0;\n","  position: absolute;\n","  width: 1px;\n","}\n","\n","#sk-container-id-1 div.sk-dashed-wrapped {\n","  border: 1px dashed var(--sklearn-color-line);\n","  margin: 0 0.4em 0.5em 0.4em;\n","  box-sizing: border-box;\n","  padding-bottom: 0.4em;\n","  background-color: var(--sklearn-color-background);\n","}\n","\n","#sk-container-id-1 div.sk-container {\n","  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n","     but bootstrap.min.css set `[hidden] { display: none !important; }`\n","     so we also need the `!important` here to be able to override the\n","     default hidden behavior on the sphinx rendered scikit-learn.org.\n","     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n","  display: inline-block !important;\n","  position: relative;\n","}\n","\n","#sk-container-id-1 div.sk-text-repr-fallback {\n","  display: none;\n","}\n","\n","div.sk-parallel-item,\n","div.sk-serial,\n","div.sk-item {\n","  /* draw centered vertical line to link estimators */\n","  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n","  background-size: 2px 100%;\n","  background-repeat: no-repeat;\n","  background-position: center center;\n","}\n","\n","/* Parallel-specific style estimator block */\n","\n","#sk-container-id-1 div.sk-parallel-item::after {\n","  content: \"\";\n","  width: 100%;\n","  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n","  flex-grow: 1;\n","}\n","\n","#sk-container-id-1 div.sk-parallel {\n","  display: flex;\n","  align-items: stretch;\n","  justify-content: center;\n","  background-color: var(--sklearn-color-background);\n","  position: relative;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item {\n","  display: flex;\n","  flex-direction: column;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item:first-child::after {\n","  align-self: flex-end;\n","  width: 50%;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item:last-child::after {\n","  align-self: flex-start;\n","  width: 50%;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item:only-child::after {\n","  width: 0;\n","}\n","\n","/* Serial-specific style estimator block */\n","\n","#sk-container-id-1 div.sk-serial {\n","  display: flex;\n","  flex-direction: column;\n","  align-items: center;\n","  background-color: var(--sklearn-color-background);\n","  padding-right: 1em;\n","  padding-left: 1em;\n","}\n","\n","\n","/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n","clickable and can be expanded/collapsed.\n","- Pipeline and ColumnTransformer use this feature and define the default style\n","- Estimators will overwrite some part of the style using the `sk-estimator` class\n","*/\n","\n","/* Pipeline and ColumnTransformer style (default) */\n","\n","#sk-container-id-1 div.sk-toggleable {\n","  /* Default theme specific background. It is overwritten whether we have a\n","  specific estimator or a Pipeline/ColumnTransformer */\n","  background-color: var(--sklearn-color-background);\n","}\n","\n","/* Toggleable label */\n","#sk-container-id-1 label.sk-toggleable__label {\n","  cursor: pointer;\n","  display: block;\n","  width: 100%;\n","  margin-bottom: 0;\n","  padding: 0.5em;\n","  box-sizing: border-box;\n","  text-align: center;\n","}\n","\n","#sk-container-id-1 label.sk-toggleable__label-arrow:before {\n","  /* Arrow on the left of the label */\n","  content: \"▸\";\n","  float: left;\n","  margin-right: 0.25em;\n","  color: var(--sklearn-color-icon);\n","}\n","\n","#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {\n","  color: var(--sklearn-color-text);\n","}\n","\n","/* Toggleable content - dropdown */\n","\n","#sk-container-id-1 div.sk-toggleable__content {\n","  max-height: 0;\n","  max-width: 0;\n","  overflow: hidden;\n","  text-align: left;\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-toggleable__content.fitted {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-toggleable__content pre {\n","  margin: 0.2em;\n","  border-radius: 0.25em;\n","  color: var(--sklearn-color-text);\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-toggleable__content.fitted pre {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n","  /* Expand drop-down */\n","  max-height: 200px;\n","  max-width: 100%;\n","  overflow: auto;\n","}\n","\n","#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n","  content: \"▾\";\n","}\n","\n","/* Pipeline/ColumnTransformer-specific style */\n","\n","#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Estimator-specific style */\n","\n","/* Colorize estimator box */\n","#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-label label.sk-toggleable__label,\n","#sk-container-id-1 div.sk-label label {\n","  /* The background is the default theme color */\n","  color: var(--sklearn-color-text-on-default-background);\n","}\n","\n","/* On hover, darken the color of the background */\n","#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","/* Label box, darken color on hover, fitted */\n","#sk-container-id-1 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Estimator label */\n","\n","#sk-container-id-1 div.sk-label label {\n","  font-family: monospace;\n","  font-weight: bold;\n","  display: inline-block;\n","  line-height: 1.2em;\n","}\n","\n","#sk-container-id-1 div.sk-label-container {\n","  text-align: center;\n","}\n","\n","/* Estimator-specific */\n","#sk-container-id-1 div.sk-estimator {\n","  font-family: monospace;\n","  border: 1px dotted var(--sklearn-color-border-box);\n","  border-radius: 0.25em;\n","  box-sizing: border-box;\n","  margin-bottom: 0.5em;\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-estimator.fitted {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","/* on hover */\n","#sk-container-id-1 div.sk-estimator:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-estimator.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Specification for estimator info (e.g. \"i\" and \"?\") */\n","\n","/* Common style for \"i\" and \"?\" */\n","\n",".sk-estimator-doc-link,\n","a:link.sk-estimator-doc-link,\n","a:visited.sk-estimator-doc-link {\n","  float: right;\n","  font-size: smaller;\n","  line-height: 1em;\n","  font-family: monospace;\n","  background-color: var(--sklearn-color-background);\n","  border-radius: 1em;\n","  height: 1em;\n","  width: 1em;\n","  text-decoration: none !important;\n","  margin-left: 1ex;\n","  /* unfitted */\n","  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-unfitted-level-1);\n","}\n","\n",".sk-estimator-doc-link.fitted,\n","a:link.sk-estimator-doc-link.fitted,\n","a:visited.sk-estimator-doc-link.fitted {\n","  /* fitted */\n","  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-fitted-level-1);\n","}\n","\n","/* On hover */\n","div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",".sk-estimator-doc-link:hover,\n","div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",".sk-estimator-doc-link:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",".sk-estimator-doc-link.fitted:hover,\n","div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",".sk-estimator-doc-link.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","/* Span, style for the box shown on hovering the info icon */\n",".sk-estimator-doc-link span {\n","  display: none;\n","  z-index: 9999;\n","  position: relative;\n","  font-weight: normal;\n","  right: .2ex;\n","  padding: .5ex;\n","  margin: .5ex;\n","  width: min-content;\n","  min-width: 20ex;\n","  max-width: 50ex;\n","  color: var(--sklearn-color-text);\n","  box-shadow: 2pt 2pt 4pt #999;\n","  /* unfitted */\n","  background: var(--sklearn-color-unfitted-level-0);\n","  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n","}\n","\n",".sk-estimator-doc-link.fitted span {\n","  /* fitted */\n","  background: var(--sklearn-color-fitted-level-0);\n","  border: var(--sklearn-color-fitted-level-3);\n","}\n","\n",".sk-estimator-doc-link:hover span {\n","  display: block;\n","}\n","\n","/* \"?\"-specific style due to the `<a>` HTML tag */\n","\n","#sk-container-id-1 a.estimator_doc_link {\n","  float: right;\n","  font-size: 1rem;\n","  line-height: 1em;\n","  font-family: monospace;\n","  background-color: var(--sklearn-color-background);\n","  border-radius: 1rem;\n","  height: 1rem;\n","  width: 1rem;\n","  text-decoration: none;\n","  /* unfitted */\n","  color: var(--sklearn-color-unfitted-level-1);\n","  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n","}\n","\n","#sk-container-id-1 a.estimator_doc_link.fitted {\n","  /* fitted */\n","  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-fitted-level-1);\n","}\n","\n","/* On hover */\n","#sk-container-id-1 a.estimator_doc_link:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","#sk-container-id-1 a.estimator_doc_link.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-3);\n","}\n","</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;LogisticRegression<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.linear_model.LogisticRegression.html\">?<span>Documentation for LogisticRegression</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>LogisticRegression()</pre></div> </div></div></div></div>"]},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":["yhead=lr.predict(x_test1)"],"metadata":{"id":"4DeYV5sB5JFE","executionInfo":{"status":"ok","timestamp":1729326606648,"user_tz":-180,"elapsed":317,"user":{"displayName":"Kursat Seçkin","userId":"06128694202626292872"}}},"execution_count":31,"outputs":[]},{"cell_type":"code","source":["yhead"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"K_f2Vj4b5Kpy","executionInfo":{"status":"ok","timestamp":1729326612905,"user_tz":-180,"elapsed":3,"user":{"displayName":"Kursat Seçkin","userId":"06128694202626292872"}},"outputId":"9320a0ec-875d-4169-a9ad-8d8aa64a0d11"},"execution_count":32,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,\n","       1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n","       1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0,\n","       0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1,\n","       0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1,\n","       0, 0, 0, 1])"]},"metadata":{},"execution_count":32}]},{"cell_type":"code","source":["print(\"doğruluk\",lr.score(x_test1,y_test))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"f_7HflCJ5N5G","executionInfo":{"status":"ok","timestamp":1729326700126,"user_tz":-180,"elapsed":313,"user":{"displayName":"Kursat Seçkin","userId":"06128694202626292872"}},"outputId":"8c87ae00-26d9-4adc-baed-c27beed37132"},"execution_count":33,"outputs":[{"output_type":"stream","name":"stdout","text":["doğruluk 0.9824561403508771\n"]}]},{"cell_type":"code","source":["from sklearn.metrics import confusion_matrix\n","cm=confusion_matrix(y_test,yhead)"],"metadata":{"id":"LDY6fyRC51OP","executionInfo":{"status":"ok","timestamp":1729326744500,"user_tz":-180,"elapsed":397,"user":{"displayName":"Kursat Seçkin","userId":"06128694202626292872"}}},"execution_count":34,"outputs":[]},{"cell_type":"code","source":["cm"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ruoo8OUq5_6t","executionInfo":{"status":"ok","timestamp":1729326747035,"user_tz":-180,"elapsed":519,"user":{"displayName":"Kursat Seçkin","userId":"06128694202626292872"}},"outputId":"1beed170-3270-414b-c115-b436fd567051"},"execution_count":35,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[74,  1],\n","       [ 1, 38]])"]},"metadata":{},"execution_count":35}]},{"cell_type":"code","source":["import seaborn as sns\n","sns.heatmap(cm,annot=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":447},"id":"56xbt7en6Anu","executionInfo":{"status":"ok","timestamp":1729326831445,"user_tz":-180,"elapsed":2289,"user":{"displayName":"Kursat Seçkin","userId":"06128694202626292872"}},"outputId":"ed6606da-e25b-4b74-ae1a-0251b1637b62"},"execution_count":36,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: >"]},"metadata":{},"execution_count":36},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["x_test1[6]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kqW9LE6f6Uy4","executionInfo":{"status":"ok","timestamp":1729327188288,"user_tz":-180,"elapsed":293,"user":{"displayName":"Kursat Seçkin","userId":"06128694202626292872"}},"outputId":"17832e45-f06f-4730-e45f-4eeeb6019f03"},"execution_count":38,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 1.53751751, -0.03386718,  1.44545077,  1.50400136,  0.50499443,\n","        0.25818336,  0.6091956 ,  0.94926962, -0.11549231, -0.9133513 ,\n","        0.72987743, -1.05854028,  0.48698419,  0.74930753, -0.78515082,\n","       -0.41351903, -0.14101894,  0.14088732, -0.81082916, -0.47937449,\n","        1.98474794, -0.22257535,  1.68837941,  1.97576869,  0.74118141,\n","        0.3490312 ,  0.73068012,  1.28352078,  0.73562415,  0.26320912])"]},"metadata":{},"execution_count":38}]},{"cell_type":"code","source":["manuel_ozellikler = [17.99, 10.38, 122.8, 1001, 0.1184, 0.2776, 0.3001, 0.1471, 0.2419, 0.07871, 1.095, 0.9053, 8.589, 153.4, 0.006399, 0.04904, 0.05373, 0.01587, 0.03003, 0.006193, 25.38, 17.33, 184.6, 2019, 0.1622, 0.6656, 0.7119, 0.2654, 0.4601, 0.1189]"],"metadata":{"id":"kym1hYwk7gmR","executionInfo":{"status":"ok","timestamp":1729327299107,"user_tz":-180,"elapsed":3,"user":{"displayName":"Kursat Seçkin","userId":"06128694202626292872"}}},"execution_count":39,"outputs":[]},{"cell_type":"code","source":["df=pd.DataFrame(manuel_ozellikler).T"],"metadata":{"id":"KalVM-Gi8G_r","executionInfo":{"status":"ok","timestamp":1729327704385,"user_tz":-180,"elapsed":415,"user":{"displayName":"Kursat Seçkin","userId":"06128694202626292872"}}},"execution_count":44,"outputs":[]},{"cell_type":"code","source":["manuel_ozellikler=sc.transform(df)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":287},"id":"b1tfbk5r9iLG","executionInfo":{"status":"error","timestamp":1729327712219,"user_tz":-180,"elapsed":284,"user":{"displayName":"Kursat Seçkin","userId":"06128694202626292872"}},"outputId":"a43d4da8-f7d6-4fc7-d628-a86d762412f3"},"execution_count":48,"outputs":[{"output_type":"error","ename":"ValueError","evalue":"X has 1 features, but StandardScaler is expecting 30 features as input.","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-48-bf1a589ed6c4>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mmanuel_ozellikler\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0msc\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtransform\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdf\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/sklearn/utils/_set_output.py\u001b[0m in \u001b[0;36mwrapped\u001b[0;34m(self, X, *args, **kwargs)\u001b[0m\n\u001b[1;32m    314\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0mwraps\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    315\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mwrapped\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 316\u001b[0;31m         \u001b[0mdata_to_wrap\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    317\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata_to_wrap\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtuple\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    318\u001b[0m             \u001b[0;31m# only wrap the first output for cross decomposition\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/sklearn/preprocessing/_data.py\u001b[0m in \u001b[0;36mtransform\u001b[0;34m(self, X, copy)\u001b[0m\n\u001b[1;32m   1043\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1044\u001b[0m         \u001b[0mcopy\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcopy\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0mcopy\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m \u001b[0;32melse\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1045\u001b[0;31m         X = self._validate_data(\n\u001b[0m\u001b[1;32m   1046\u001b[0m             \u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1047\u001b[0m             \u001b[0mreset\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/sklearn/base.py\u001b[0m in \u001b[0;36m_validate_data\u001b[0;34m(self, X, y, reset, validate_separately, cast_to_ndarray, **check_params)\u001b[0m\n\u001b[1;32m    652\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    653\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mno_val_X\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0mcheck_params\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"ensure_2d\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 654\u001b[0;31m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_check_n_features\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mreset\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mreset\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    655\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    656\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mout\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/sklearn/base.py\u001b[0m in \u001b[0;36m_check_n_features\u001b[0;34m(self, X, reset)\u001b[0m\n\u001b[1;32m    441\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    442\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mn_features\u001b[0m \u001b[0;34m!=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mn_features_in_\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 443\u001b[0;31m             raise ValueError(\n\u001b[0m\u001b[1;32m    444\u001b[0m                 \u001b[0;34mf\"X has {n_features} features, but {self.__class__.__name__} \"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    445\u001b[0m                 \u001b[0;34mf\"is expecting {self.n_features_in_} features as input.\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mValueError\u001b[0m: X has 1 features, but StandardScaler is expecting 30 features as input."]}]},{"cell_type":"code","source":["manuel_ozellikler"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uzpkVRx89l3-","executionInfo":{"status":"ok","timestamp":1729327715772,"user_tz":-180,"elapsed":5,"user":{"displayName":"Kursat Seçkin","userId":"06128694202626292872"}},"outputId":"8062a507-f4ea-40b4-ea3d-85337ae29621"},"execution_count":49,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1.799e+01, 1.038e+01, 1.228e+02, 1.001e+03, 1.184e-01, 2.776e-01,\n","        3.001e-01, 1.471e-01, 2.419e-01, 7.871e-02, 1.095e+00, 9.053e-01,\n","        8.589e+00, 1.534e+02, 6.399e-03, 4.904e-02, 5.373e-02, 1.587e-02,\n","        3.003e-02, 6.193e-03, 2.538e+01, 1.733e+01, 1.846e+02, 2.019e+03,\n","        1.622e-01, 6.656e-01, 7.119e-01, 2.654e-01, 4.601e-01, 1.189e-01]])"]},"metadata":{},"execution_count":49}]},{"cell_type":"code","source":["lr.predict(manuel_ozellikler)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dhD_5cN49nTE","executionInfo":{"status":"ok","timestamp":1729327720741,"user_tz":-180,"elapsed":4,"user":{"displayName":"Kursat Seçkin","userId":"06128694202626292872"}},"outputId":"cb2eda5b-8175-4919-af84-3b1b0c37f88b"},"execution_count":50,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1])"]},"metadata":{},"execution_count":50}]},{"cell_type":"code","source":["if lr.predict(manuel_ozellikler)==1:\n","  print(\"kötü huylu\")\n","else:\n","  print(\"iyi huylu\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hUcJMFHa9ub1","executionInfo":{"status":"ok","timestamp":1729327796368,"user_tz":-180,"elapsed":293,"user":{"displayName":"Kursat Seçkin","userId":"06128694202626292872"}},"outputId":"d813199f-6d3d-462b-a34d-83532592c7bd"},"execution_count":54,"outputs":[{"output_type":"stream","name":"stdout","text":["kötü huylu\n"]}]},{"cell_type":"code","source":["import pickle"],"metadata":{"id":"oXklU-Fz9yRp","executionInfo":{"status":"ok","timestamp":1729327805256,"user_tz":-180,"elapsed":284,"user":{"displayName":"Kursat Seçkin","userId":"06128694202626292872"}}},"execution_count":55,"outputs":[]},{"cell_type":"code","source":["with open(\"scaler1.pkl\",\"wb\") as file:\n","  pickle.dump(sc,file)\n",""],"metadata":{"id":"P_-WoiD9-DCU","executionInfo":{"status":"ok","timestamp":1729328020631,"user_tz":-180,"elapsed":308,"user":{"displayName":"Kursat Seçkin","userId":"06128694202626292872"}}},"execution_count":57,"outputs":[]},{"cell_type":"code","source":["with open(\"model1.pkl\",\"wb\") as file:\n","  pickle.dump(lr,file)"],"metadata":{"id":"LHM6EkVq-3m_","executionInfo":{"status":"ok","timestamp":1729328062831,"user_tz":-180,"elapsed":328,"user":{"displayName":"Kursat Seçkin","userId":"06128694202626292872"}}},"execution_count":58,"outputs":[]},{"cell_type":"code","source":["import joblib"],"metadata":{"id":"8eZOkP7k_B6F","executionInfo":{"status":"ok","timestamp":1729328067461,"user_tz":-180,"elapsed":1,"user":{"displayName":"Kursat Seçkin","userId":"06128694202626292872"}}},"execution_count":59,"outputs":[]},{"cell_type":"code","source":["with open(\"scaler2.jb\",\"wb\") as file:\n","  joblib.dump(sc,file)"],"metadata":{"id":"B68GeNSH_DCm","executionInfo":{"status":"ok","timestamp":1729328086992,"user_tz":-180,"elapsed":283,"user":{"displayName":"Kursat Seçkin","userId":"06128694202626292872"}}},"execution_count":60,"outputs":[]},{"cell_type":"code","source":["with open(\"model2.jb\",\"wb\") as file:\n","  joblib.dump(lr,file)"],"metadata":{"id":"ABBB27ST_Hz5","executionInfo":{"status":"ok","timestamp":1729328101071,"user_tz":-180,"elapsed":290,"user":{"displayName":"Kursat Seçkin","userId":"06128694202626292872"}}},"execution_count":62,"outputs":[]},{"cell_type":"code","source":["with open(\"scaler1.pkl\",\"rb\") as file:\n","  scaler=pickle.load(file)"],"metadata":{"id":"_pcPdJoH_KBZ","executionInfo":{"status":"ok","timestamp":1729332120718,"user_tz":-180,"elapsed":460,"user":{"displayName":"Kursat Seçkin","userId":"06128694202626292872"}}},"execution_count":64,"outputs":[]},{"cell_type":"code","source":["with open(\"model1.pkl\",\"rb\") as file:\n","  model=pickle.load(file)"],"metadata":{"id":"wS6rzVFuOd0K","executionInfo":{"status":"ok","timestamp":1729332131782,"user_tz":-180,"elapsed":317,"user":{"displayName":"Kursat Seçkin","userId":"06128694202626292872"}}},"execution_count":65,"outputs":[]},{"cell_type":"code","source":["manuel_ozellikler = [17.99, 10.38, 122.8, 1001, 0.1184, 0.2776, 0.3001, 0.1471, 0.2419, 0.07871, 1.095, 0.9053, 8.589, 153.4, 0.006399, 0.04904, 0.05373, 0.01587, 0.03003, 0.006193, 25.38, 17.33, 184.6, 2019, 0.1622, 0.6656, 0.7119, 0.2654, 0.4601, 0.1189]\n"],"metadata":{"id":"DDpTsWBqOjTh","executionInfo":{"status":"ok","timestamp":1729332170299,"user_tz":-180,"elapsed":515,"user":{"displayName":"Kursat Seçkin","userId":"06128694202626292872"}}},"execution_count":67,"outputs":[]},{"cell_type":"code","source":["manuel_df=pd.DataFrame([manuel_ozellikler])"],"metadata":{"id":"RJpmf-UmOqvt","executionInfo":{"status":"ok","timestamp":1729332217271,"user_tz":-180,"elapsed":414,"user":{"displayName":"Kursat Seçkin","userId":"06128694202626292872"}}},"execution_count":70,"outputs":[]},{"cell_type":"code","source":["manuel_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":130},"id":"5veaJBZHOx5k","executionInfo":{"status":"ok","timestamp":1729332218138,"user_tz":-180,"elapsed":4,"user":{"displayName":"Kursat Seçkin","userId":"06128694202626292872"}},"outputId":"02d3e728-9b96-4720-dda0-f8e5590d8105"},"execution_count":71,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      0      1      2     3       4       5       6       7       8        9   \\\n","0  17.99  10.38  122.8  1001  0.1184  0.2776  0.3001  0.1471  0.2419  0.07871   \n","\n","   ...     20     21     22    23      24      25      26      27      28  \\\n","0  ...  25.38  17.33  184.6  2019  0.1622  0.6656  0.7119  0.2654  0.4601   \n","\n","       29  \n","0  0.1189  \n","\n","[1 rows x 30 columns]"],"text/html":["\n","  <div id=\"df-6c9ef16f-f158-4c9a-8919-b032aa6e7c73\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>5</th>\n","      <th>6</th>\n","      <th>7</th>\n","      <th>8</th>\n","      <th>9</th>\n","      <th>...</th>\n","      <th>20</th>\n","      <th>21</th>\n","      <th>22</th>\n","      <th>23</th>\n","      <th>24</th>\n","      <th>25</th>\n","      <th>26</th>\n","      <th>27</th>\n","      <th>28</th>\n","      <th>29</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>17.99</td>\n","      <td>10.38</td>\n","      <td>122.8</td>\n","      <td>1001</td>\n","      <td>0.1184</td>\n","      <td>0.2776</td>\n","      <td>0.3001</td>\n","      <td>0.1471</td>\n","      <td>0.2419</td>\n","      <td>0.07871</td>\n","      <td>...</td>\n","      <td>25.38</td>\n","      <td>17.33</td>\n","      <td>184.6</td>\n","      <td>2019</td>\n","      <td>0.1622</td>\n","      <td>0.6656</td>\n","      <td>0.7119</td>\n","      <td>0.2654</td>\n","      <td>0.4601</td>\n","      <td>0.1189</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1 rows × 30 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6c9ef16f-f158-4c9a-8919-b032aa6e7c73')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6c9ef16f-f158-4c9a-8919-b032aa6e7c73 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6c9ef16f-f158-4c9a-8919-b032aa6e7c73');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","  <div id=\"id_945e2738-db35-4584-a58f-97994fe583f4\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('manuel_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_945e2738-db35-4584-a58f-97994fe583f4 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('manuel_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"manuel_df"}},"metadata":{},"execution_count":71}]},{"cell_type":"code","source":["manuel_olceklenidirilmis=scaler.transform(manuel_df)"],"metadata":{"id":"s7vc0nJHOzKv","executionInfo":{"status":"ok","timestamp":1729332256084,"user_tz":-180,"elapsed":1528,"user":{"displayName":"Kursat Seçkin","userId":"06128694202626292872"}}},"execution_count":72,"outputs":[]},{"cell_type":"code","source":["model.predict(manuel_olceklenidirilmis)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OSuh5kdAPBW0","executionInfo":{"status":"ok","timestamp":1729332283122,"user_tz":-180,"elapsed":315,"user":{"displayName":"Kursat Seçkin","userId":"06128694202626292872"}},"outputId":"5d82ae94-b1f1-450a-baba-d4430c681f6a"},"execution_count":73,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1])"]},"metadata":{},"execution_count":73}]},{"cell_type":"code","source":["if model.predict(manuel_olceklenidirilmis)==1:\n","  print(\"kötü huylu\")\n","else:\n","  print(\"iyi huylu\" )"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EUBMCDxkPIRk","executionInfo":{"status":"ok","timestamp":1729332318504,"user_tz":-180,"elapsed":718,"user":{"displayName":"Kursat Seçkin","userId":"06128694202626292872"}},"outputId":"ce96d869-9b51-4e2b-89f8-28d29718e496"},"execution_count":75,"outputs":[{"output_type":"stream","name":"stdout","text":["kötü huylu\n"]}]},{"cell_type":"code","source":["with open(\"scaler2.jb\",\"rb\") as file:\n","  scaler=joblib.load(file)"],"metadata":{"id":"IYNs03FzPPob","executionInfo":{"status":"ok","timestamp":1729332671057,"user_tz":-180,"elapsed":318,"user":{"displayName":"Kursat Seçkin","userId":"06128694202626292872"}}},"execution_count":76,"outputs":[]},{"cell_type":"code","source":["with open(\"model2.jb\",\"rb\") as file:\n","  model=joblib.load(file)"],"metadata":{"id":"56DTcVjfQm9z","executionInfo":{"status":"ok","timestamp":1729332676069,"user_tz":-180,"elapsed":302,"user":{"displayName":"Kursat Seçkin","userId":"06128694202626292872"}}},"execution_count":77,"outputs":[]},{"cell_type":"code","source":["manuel_ozellikler = [17.99, 10.38, 122.8, 1001, 0.1184, 0.2776, 0.3001, 0.1471, 0.2419, 0.07871, 1.095, 0.9053, 8.589, 153.4, 0.006399, 0.04904, 0.05373, 0.01587, 0.03003, 0.006193, 25.38, 17.33, 184.6, 2019, 0.1622, 0.6656, 0.7119, 0.2654, 0.4601, 0.1189]\n"],"metadata":{"id":"n5aZt-nKQoMY","executionInfo":{"status":"ok","timestamp":1729332789331,"user_tz":-180,"elapsed":401,"user":{"displayName":"Kursat Seçkin","userId":"06128694202626292872"}}},"execution_count":78,"outputs":[]},{"cell_type":"code","source":["manuel_df=pd.DataFrame([manuel_ozellikler])"],"metadata":{"id":"0iUw8v4CRD0w","executionInfo":{"status":"ok","timestamp":1729332815480,"user_tz":-180,"elapsed":306,"user":{"displayName":"Kursat Seçkin","userId":"06128694202626292872"}}},"execution_count":79,"outputs":[]},{"cell_type":"code","source":["manuel_olceklenidirilmis=scaler.transform(manuel_df)\n"],"metadata":{"id":"-ZkoCQb_RKOk","executionInfo":{"status":"ok","timestamp":1729332860611,"user_tz":-180,"elapsed":360,"user":{"displayName":"Kursat Seçkin","userId":"06128694202626292872"}}},"execution_count":80,"outputs":[]},{"cell_type":"code","source":["model.predict(manuel_olceklenidirilmis)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HBpUBnvORVOt","executionInfo":{"status":"ok","timestamp":1729332879340,"user_tz":-180,"elapsed":309,"user":{"displayName":"Kursat Seçkin","userId":"06128694202626292872"}},"outputId":"e395d7d5-a891-4f15-e2ba-967b35b2564f"},"execution_count":81,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1])"]},"metadata":{},"execution_count":81}]},{"cell_type":"code","source":["if model.predict(manuel_olceklenidirilmis)==1:\n","  print(\"kötü huylu\")\n","else:\n","  print(\"iyi huylu\" )"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AoFOsrwTRZz_","executionInfo":{"status":"ok","timestamp":1729332883668,"user_tz":-180,"elapsed":308,"user":{"displayName":"Kursat Seçkin","userId":"06128694202626292872"}},"outputId":"f6cc1f8b-ef98-4754-b412-8895e22b67f6"},"execution_count":82,"outputs":[{"output_type":"stream","name":"stdout","text":["kötü huylu\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"t9GrwlBeRa33"},"execution_count":null,"outputs":[]}]}